version: 2.1

###################################################################################################
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.1


# CI ##################################################################################################
jobs: 

  build: 
    docker: 
      - image: alpine:latest
    steps: 
      # since we are using a simple html to represent the app no additional build steps needed
      - checkout

  lint:
    docker:
      - image: cimg/node:18.10.0
    steps:
      - checkout
      - run:
          name: Install linting dependencies (hadolint, tidy)
          command: |
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 
            sudo chmod +x /bin/hadolint
            sudo apt install tidy
      - run:
          name: lint sourcecode (html)
          command: tidy -e src/*.html
      - run:
          name: lint Dockerfile
          command: hadolint Dockerfile
            
      
  build-and-publish-image:
    docker:
      - image: docker:stable
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_ACCESS_TOKEN
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and publish 
          command: |
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_ACCESS_TOKEN
            docker build -t aobri/cloud-devops-capstone:latest  . 
            docker push aobri/cloud-devops-capstone:latest



# CD ##################################################################################################
  
  update-eks-deployment:
    docker:
      - image: cimg/python:3.10 
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: kubernetes/deployment.yml
          resource-name: deployment/capstone-app
          

  update-eks-service:
    docker:
      - image: cimg/python:3.10 
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: kubernetes/service.yml
          resource-name: service/capstone-app



###################################################################################################
workflows: 
  default:
    jobs:
      - build
      - lint:
          requires: [build]
      - build-and-publish-image:
          requires: [lint]
      - update-eks-service:
          cluster-name: EksCluster-yyofAdFnSvC1
          requires: [build-and-publish-image]
      - update-eks-deployment:
          cluster-name: EksCluster-yyofAdFnSvC1
          requires: [update-eks-service]
      - aws-eks/update-container-image:
          cluster-name: EksCluster-yyofAdFnSvC1
          container-image-updates: 'aobri/cloud-devops-capstone:latest'
          requires: [update-eks-deployment]
          resource-name: deployment/capstone-app
